{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avida\\\\PycharmProjects\\\\Final_Project\\\\App_Project\\\\test1\\\\src\\\\components\\\\UI\\\\table\\\\table.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport cl from './table.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomerTable1({\n  FetchUrl\n}) {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [editData, setEditData] = useState({}); // Data to be edited\n\n  useEffect(() => {\n    fetchCustomers();\n  }, []);\n  const fetchCustomers = async () => {\n    try {\n      const response = await fetch(FetchUrl);\n      const data = await response.json();\n      setCustomers(data.table);\n    } catch (error) {\n      console.error('Error fetching customers:', error);\n    }\n  };\n  const handleDelete = async customerId => {\n    try {\n      await fetch(`http://localhost:8000/delete_customer/${customerId}`, {\n        method: 'DELETE'\n      });\n      fetchCustomers(); // Refresh data after delete\n    } catch (error) {\n      console.error('Error deleting customer:', error);\n    }\n  };\n  const handleEditChange = (e, field) => {\n    setEditData({\n      ...editData,\n      [field]: e.target.value\n    });\n  };\n  const handleEditSubmit = async customerId => {\n    try {\n      await fetch(`http://localhost:8000/update_customer`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(editData)\n      });\n      fetchCustomers(); // Refresh data after edit\n      setEditData({}); // Clear edit data\n    } catch (error) {\n      console.error('Error editing customer:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: cl.container,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [customers.length > 0 && Object.keys(customers[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: key\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: customers.map((customer, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [Object.entries(customer).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editData.id === customer.id && key !== 'id' ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              defaultValue: value,\n              onChange: e => handleEditChange(e, key)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this) : value\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editData.id === customer.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditSubmit(customer.id),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setEditData(customer),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(customer.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomerTable1, \"wB34uo1K0NqZAzfRLXvI+fmul+o=\");\n_c = CustomerTable1;\nexport default CustomerTable1;\nvar _c;\n$RefreshReg$(_c, \"CustomerTable1\");","map":{"version":3,"names":["React","useState","useEffect","cl","jsxDEV","_jsxDEV","CustomerTable1","FetchUrl","_s","customers","setCustomers","editData","setEditData","fetchCustomers","response","fetch","data","json","table","error","console","handleDelete","customerId","method","handleEditChange","e","field","target","value","handleEditSubmit","headers","body","JSON","stringify","children","className","container","length","Object","keys","map","key","fileName","_jsxFileName","lineNumber","columnNumber","customer","index","entries","id","type","defaultValue","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/avida/PycharmProjects/Final_Project/App_Project/test1/src/components/UI/table/table.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport cl from './table.module.css';\r\n\r\nfunction CustomerTable1({ FetchUrl }) {\r\n  const [customers, setCustomers] = useState([]);\r\n  const [editData, setEditData] = useState({}); // Data to be edited\r\n\r\n  useEffect(() => {\r\n    fetchCustomers();\r\n  }, []);\r\n\r\n  const fetchCustomers = async () => {\r\n    try {\r\n      const response = await fetch(FetchUrl);\r\n      const data = await response.json();\r\n      setCustomers(data.table);\r\n    } catch (error) {\r\n      console.error('Error fetching customers:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (customerId) => {\r\n    try {\r\n      await fetch(`http://localhost:8000/delete_customer/${customerId}`, {\r\n        method: 'DELETE'\r\n      });\r\n      fetchCustomers(); // Refresh data after delete\r\n    } catch (error) {\r\n      console.error('Error deleting customer:', error);\r\n    }\r\n  };\r\n\r\n  const handleEditChange = (e, field) => {\r\n    setEditData({ ...editData, [field]: e.target.value });\r\n  };\r\n\r\n  const handleEditSubmit = async (customerId) => {\r\n    try {\r\n      await fetch(`http://localhost:8000/update_customer`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(editData)\r\n      });\r\n      fetchCustomers(); // Refresh data after edit\r\n      setEditData({}); // Clear edit data\r\n    } catch (error) {\r\n      console.error('Error editing customer:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <table className={cl.container}>\r\n        <thead>\r\n          <tr>\r\n            {customers.length > 0 && Object.keys(customers[0]).map(key => (\r\n              <th key={key}>{key}</th>\r\n            ))}\r\n            <th>Edit</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {customers.map((customer, index) => (\r\n            <tr key={index}>\r\n              {Object.entries(customer).map(([key, value]) => (\r\n                <td key={key}>\r\n                  {editData.id === customer.id && key !== 'id' ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      defaultValue={value}\r\n                      onChange={(e) => handleEditChange(e, key)}\r\n                    />\r\n                  ) : (\r\n                    value\r\n                  )}\r\n                </td>\r\n              ))}\r\n              <td>\r\n                {editData.id === customer.id ? (\r\n                  <button onClick={() => handleEditSubmit(customer.id)}>Save</button>\r\n                ) : (\r\n                  <button onClick={() => setEditData(customer)}>Edit</button>\r\n                )}\r\n              </td>\r\n              <td>\r\n                <button onClick={() => handleDelete(customer.id)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomerTable1;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}