{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avida\\\\PycharmProjects\\\\Final_Project\\\\App_Project\\\\test1\\\\src\\\\components\\\\UI\\\\table\\\\table.jsx\",\n  _s = $RefreshSig$();\nimport cl from './table.module.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomerTable1({\n  FetchUrl\n}) {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  useEffect(() => {\n    fetch(FetchUrl).then(response => response.json()).then(data => setCustomers(data.table)).catch(error => console.error('Error fetching customers:', error));\n  }, [FetchUrl]);\n  const handleDelete = id => {\n    fetch(`http://localhost:8000/delete_customer/${id}`, {\n      method: 'DELETE'\n    }).then(response => {\n      if (response.ok) {\n        setCustomers(customers.filter(customer => customer.id !== id));\n      } else {\n        console.error('Error deleting customer');\n      }\n    }).catch(error => console.error('Error deleting customer:', error));\n  };\n  const handleEdit = id => {\n    const customer = customers.find(cust => cust.id === id);\n    const updatedName = prompt(\"Enter new name\", customer.name);\n    const updatedMail = prompt(\"Enter new mail\", customer.mail);\n    const updatedPhone = prompt(\"Enter new phone\", customer.phone);\n    if (updatedName && updatedMail && updatedPhone) {\n      const updatedCustomer = {\n        ...customer,\n        name: updatedName,\n        mail: updatedMail,\n        phone: updatedPhone\n      };\n      fetch(`http://localhost:8000/update_customer/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedCustomer)\n      }).then(response => response.json()).then(data => {\n        if (data.message === 'Customer updated successfully') {\n          setCustomers(customers.map(cust => cust.id === id ? updatedCustomer : cust));\n        } else {\n          console.error('Error updating customer');\n        }\n      }).catch(error => console.error('Error updating customer:', error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: cl.container,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [customers.length > 0 && Object.keys(customers[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: key\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: customers.map(customer => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [Object.values(customer).map((value, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: value\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(customer.id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(customer.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, customer.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomerTable1, \"h68b3hq6gv818inqQQjo1WvNv/E=\");\n_c = CustomerTable1;\nexport default CustomerTable1;\nvar _c;\n$RefreshReg$(_c, \"CustomerTable1\");","map":{"version":3,"names":["cl","React","useState","useEffect","jsxDEV","_jsxDEV","CustomerTable1","FetchUrl","_s","customers","setCustomers","fetch","then","response","json","data","table","catch","error","console","handleDelete","id","method","ok","filter","customer","handleEdit","find","cust","updatedName","prompt","name","updatedMail","mail","updatedPhone","phone","updatedCustomer","headers","body","JSON","stringify","message","map","children","className","container","length","Object","keys","key","fileName","_jsxFileName","lineNumber","columnNumber","values","value","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/avida/PycharmProjects/Final_Project/App_Project/test1/src/components/UI/table/table.jsx"],"sourcesContent":["import cl from './table.module.css';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction CustomerTable1({ FetchUrl }) {\r\n  const [customers, setCustomers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(FetchUrl)\r\n      .then(response => response.json())\r\n      .then(data => setCustomers(data.table))\r\n      .catch(error => console.error('Error fetching customers:', error));\r\n  }, [FetchUrl]);\r\n\r\n  const handleDelete = (id) => {\r\n    fetch(`http://localhost:8000/delete_customer/${id}`, { method: 'DELETE' })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          setCustomers(customers.filter(customer => customer.id !== id));\r\n        } else {\r\n          console.error('Error deleting customer');\r\n        }\r\n      })\r\n      .catch(error => console.error('Error deleting customer:', error));\r\n  };\r\n\r\n  const handleEdit = (id) => {\r\n    const customer = customers.find(cust => cust.id === id);\r\n    const updatedName = prompt(\"Enter new name\", customer.name);\r\n    const updatedMail = prompt(\"Enter new mail\", customer.mail);\r\n    const updatedPhone = prompt(\"Enter new phone\", customer.phone);\r\n\r\n    if (updatedName && updatedMail && updatedPhone) {\r\n      const updatedCustomer = { ...customer, name: updatedName, mail: updatedMail, phone: updatedPhone };\r\n      fetch(`http://localhost:8000/update_customer/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(updatedCustomer)\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.message === 'Customer updated successfully') {\r\n          setCustomers(customers.map(cust => cust.id === id ? updatedCustomer : cust));\r\n        } else {\r\n          console.error('Error updating customer');\r\n        }\r\n      })\r\n      .catch(error => console.error('Error updating customer:', error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <table className={cl.container}>\r\n        <thead>\r\n          <tr>\r\n            {customers.length > 0 && Object.keys(customers[0]).map(key => (\r\n              <th key={key}>{key}</th>\r\n            ))}\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {customers.map((customer) => (\r\n            <tr key={customer.id}>\r\n              {Object.values(customer).map((value, index) => (\r\n                <td key={index}>{value}</td>\r\n              ))}\r\n              <td>\r\n                <button onClick={() => handleEdit(customer.id)}>Edit</button>\r\n                <button onClick={() => handleDelete(customer.id)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomerTable1;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}