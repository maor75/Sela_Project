{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avida\\\\PycharmProjects\\\\Final_Project\\\\App_Project\\\\test1\\\\src\\\\components\\\\UI\\\\table\\\\table.jsx\",\n  _s = $RefreshSig$();\nimport cl from './table.module.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CustomerTable1({\n  FetchUrl\n}) {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [editRowIndex, setEditRowIndex] = useState(null);\n  const [editFormData, setEditFormData] = useState({});\n  useEffect(() => {\n    fetch(FetchUrl).then(response => response.json()).then(data => setCustomers(data.table)).catch(error => console.error('Error fetching customers:', error));\n  }, [FetchUrl]);\n  const handleEditRow = rowIndex => {\n    setEditRowIndex(rowIndex);\n    setEditFormData(customers[rowIndex]);\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setEditFormData({\n      ...editFormData,\n      [name]: value\n    });\n  };\n  const handleSubmitEdit = rowIndex => {\n    fetch('http://localhost:8000/update', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(editFormData)\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n      const updatedCustomers = [...customers];\n      updatedCustomers[rowIndex] = editFormData;\n      setCustomers(updatedCustomers);\n      setEditRowIndex(null);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  const handleDeleteRow = rowIndex => {\n    const personToDelete = customers[rowIndex];\n    fetch('http://localhost:8000/delete', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(personToDelete)\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n      setCustomers(customers.filter((_, index) => index !== rowIndex));\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: cl.container,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [customers.length > 0 && Object.keys(customers[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: key\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: customers.map((customer, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [Object.keys(customer).map(key => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editRowIndex === rowIndex ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: key,\n              value: editFormData[key] || '',\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this) : customer[key]\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editRowIndex === rowIndex ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSubmitEdit(rowIndex),\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEditRow(rowIndex),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteRow(rowIndex),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, rowIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomerTable1, \"bNgO98VxRnbyS20V05I3i3GP0c4=\");\n_c = CustomerTable1;\nexport default CustomerTable1;\nvar _c;\n$RefreshReg$(_c, \"CustomerTable1\");","map":{"version":3,"names":["cl","React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomerTable1","FetchUrl","_s","customers","setCustomers","editRowIndex","setEditRowIndex","editFormData","setEditFormData","fetch","then","response","json","data","table","catch","error","console","handleEditRow","rowIndex","handleInputChange","event","name","value","target","handleSubmitEdit","method","headers","body","JSON","stringify","log","updatedCustomers","handleDeleteRow","personToDelete","filter","_","index","children","className","container","length","Object","keys","map","key","fileName","_jsxFileName","lineNumber","columnNumber","customer","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/avida/PycharmProjects/Final_Project/App_Project/test1/src/components/UI/table/table.jsx"],"sourcesContent":["import cl from './table.module.css'\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction CustomerTable1({ FetchUrl }) {\r\n  const [customers, setCustomers] = useState([]);\r\n  const [editRowIndex, setEditRowIndex] = useState(null);\r\n  const [editFormData, setEditFormData] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch(FetchUrl)\r\n      .then(response => response.json())\r\n      .then(data => setCustomers(data.table))\r\n      .catch(error => console.error('Error fetching customers:', error));\r\n  }, [FetchUrl]);\r\n\r\n  const handleEditRow = (rowIndex) => {\r\n    setEditRowIndex(rowIndex);\r\n    setEditFormData(customers[rowIndex]);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setEditFormData({\r\n      ...editFormData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmitEdit = (rowIndex) => {\r\n    fetch('http://localhost:8000/update', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(editFormData),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log('Success:', data);\r\n      const updatedCustomers = [...customers];\r\n      updatedCustomers[rowIndex] = editFormData;\r\n      setCustomers(updatedCustomers);\r\n      setEditRowIndex(null);\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  };\r\n\r\n  const handleDeleteRow = (rowIndex) => {\r\n    const personToDelete = customers[rowIndex];\r\n\r\n    fetch('http://localhost:8000/delete', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(personToDelete),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log('Success:', data);\r\n      setCustomers(customers.filter((_, index) => index !== rowIndex));\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <table className={cl.container}>\r\n        <thead>\r\n          <tr>\r\n            {customers.length > 0 && Object.keys(customers[0]).map(key => (\r\n              <th key={key}>{key}</th>\r\n            ))}\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {customers.map((customer, rowIndex) => (\r\n            <tr key={rowIndex}>\r\n              {Object.keys(customer).map((key) => (\r\n                <td key={key}>\r\n                  {editRowIndex === rowIndex ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      name={key}\r\n                      value={editFormData[key] || ''}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  ) : (\r\n                    customer[key]\r\n                  )}\r\n                </td>\r\n              ))}\r\n              <td>\r\n                {editRowIndex === rowIndex ? (\r\n                  <button onClick={() => handleSubmitEdit(rowIndex)}>Submit</button>\r\n                ) : (\r\n                  <>\r\n                    <button onClick={() => handleEditRow(rowIndex)}>Edit</button>\r\n                    <button onClick={() => handleDeleteRow(rowIndex)}>Delete</button>\r\n                  </>\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomerTable1;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}