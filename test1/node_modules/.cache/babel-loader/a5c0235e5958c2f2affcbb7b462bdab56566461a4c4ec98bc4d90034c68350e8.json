{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avida\\\\PycharmProjects\\\\Final_Project\\\\App_Project\\\\test1\\\\src\\\\components\\\\UI\\\\table\\\\table.jsx\",\n  _s = $RefreshSig$();\nimport cl from './table.module.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomerTable1({\n  FetchUrl\n}) {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  useEffect(() => {\n    fetch(FetchUrl).then(response => response.json()).then(data => setCustomers(data.table)).catch(error => console.error('Error fetching customers:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: cl.container,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: customers.length > 0 && Object.keys(customers[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: key\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: customers.map((customer, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.values(customer).map((value, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: value\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomerTable1, \"h68b3hq6gv818inqQQjo1WvNv/E=\");\n_c = CustomerTable1;\nexport default CustomerTable1;\nvar _c;\n$RefreshReg$(_c, \"CustomerTable1\");","map":{"version":3,"names":["cl","React","useState","useEffect","jsxDEV","_jsxDEV","CustomerTable1","FetchUrl","_s","customers","setCustomers","fetch","then","response","json","data","table","catch","error","console","children","className","container","length","Object","keys","map","key","fileName","_jsxFileName","lineNumber","columnNumber","customer","index","values","value","_c","$RefreshReg$"],"sources":["C:/Users/avida/PycharmProjects/Final_Project/App_Project/test1/src/components/UI/table/table.jsx"],"sourcesContent":["import cl from './table.module.css'\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction CustomerTable1({FetchUrl}) {\r\n  const [customers, setCustomers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(FetchUrl)\r\n      .then(response => response.json())\r\n      .then(data => setCustomers(data.table))\r\n      .catch(error => console.error('Error fetching customers:', error));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n\r\n      <table className={cl.container}>\r\n        <thead>\r\n          <tr>\r\n            {customers.length > 0 && Object.keys(customers[0]).map(key => (\r\n              <th key={key}>{key}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {customers.map((customer, index) => (\r\n            <tr key={index}>\r\n              {Object.values(customer).map((value, index) => (\r\n                <td key={index}>{value}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomerTable1;"],"mappings":";;AAAA,OAAOA,EAAE,MAAM,oBAAoB;AACnC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,cAAcA,CAAC;EAACC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACdQ,KAAK,CAACJ,QAAQ,CAAC,CACZK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,YAAY,CAACK,IAAI,CAACC,KAAK,CAAC,CAAC,CACtCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAAe,QAAA,eAEEf,OAAA;MAAOgB,SAAS,EAAErB,EAAE,CAACsB,SAAU;MAAAF,QAAA,gBAC7Bf,OAAA;QAAAe,QAAA,eACEf,OAAA;UAAAe,QAAA,EACGX,SAAS,CAACc,MAAM,GAAG,CAAC,IAAIC,MAAM,CAACC,IAAI,CAAChB,SAAS,CAAC,CAAC,CAAC,CAAC,CAACiB,GAAG,CAACC,GAAG,iBACxDtB,OAAA;YAAAe,QAAA,EAAeO;UAAG,GAATA,GAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CACxB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR1B,OAAA;QAAAe,QAAA,EACGX,SAAS,CAACiB,GAAG,CAAC,CAACM,QAAQ,EAAEC,KAAK,kBAC7B5B,OAAA;UAAAe,QAAA,EACGI,MAAM,CAACU,MAAM,CAACF,QAAQ,CAAC,CAACN,GAAG,CAAC,CAACS,KAAK,EAAEF,KAAK,kBACxC5B,OAAA;YAAAe,QAAA,EAAiBe;UAAK,GAAbF,KAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAC5B;QAAC,GAHKE,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACvB,EAAA,CAjCQF,cAAc;AAAA8B,EAAA,GAAd9B,cAAc;AAmCvB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}